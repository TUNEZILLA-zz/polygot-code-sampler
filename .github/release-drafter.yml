name-template: 'v$RESOLVED_VERSION 🌟'
tag-template: 'v$RESOLVED_VERSION'
categories:
  - title: '🚀 Features'
    labels:
      - 'feature'
      - 'enhancement'
  - title: '🐛 Bug Fixes'
    labels:
      - 'fix'
      - 'bugfix'
      - 'bug'
  - title: '🧪 Testing'
    labels:
      - 'test'
      - 'testing'
  - title: '📚 Documentation'
    labels:
      - 'documentation'
      - 'docs'
  - title: '🔧 Maintenance'
    labels:
      - 'chore'
      - 'maintenance'
      - 'dependencies'
  - title: '⚡ Performance'
    labels:
      - 'performance'
      - 'perf'
  - title: '🔒 Security'
    labels:
      - 'security'
      - 'vulnerability'
  - title: '🏗️ Infrastructure'
    labels:
      - 'ci'
      - 'cd'
      - 'infrastructure'
      - 'workflow'

change-template: '- $TITLE @$AUTHOR (#$NUMBER)'

change-title-escapes: '\<*_&' # You can add # and @ to disable mentions, and add ` to disable code blocks.

version-resolver:
  major:
    labels:
      - 'major'
      - 'breaking'
  minor:
    labels:
      - 'minor'
      - 'feature'
      - 'enhancement'
  patch:
    labels:
      - 'patch'
      - 'fix'
      - 'bugfix'
      - 'bug'
      - 'chore'
      - 'maintenance'

template: |
  ## 🎉 What's Changed

  $CHANGES

  ## 📊 Performance Impact

  This release includes performance improvements across multiple backends:
  - **Rust**: Rayon parallel processing optimizations
  - **TypeScript**: Web Workers efficiency improvements
  - **Go**: Goroutine scheduling enhancements
  - **C#**: PLINQ parallel execution improvements
  - **Julia**: Thread-local storage optimizations
  - **SQL**: Query optimization and dialect support

  ## 🧪 Testing

  - All 59 tests passing ✅
  - Golden file stability verified ✅
  - Cross-backend compatibility confirmed ✅
  - Performance benchmarks updated ✅

  ## 📚 Documentation

  - Updated [RENDERER_API.md](docs/RENDERER_API.md) with latest features
  - Enhanced [CHANGELOG.md](CHANGELOG.md) with detailed migration guides
  - Added [Issue Templates](.github/ISSUE_TEMPLATE/) for better community support

  ## 🚀 Getting Started

  ```bash
  # Install the latest version
  pip install polyglot-code-sampler

  # Try the central renderer API
  from pcs.renderer_api import render
  from pcs.core import PyToIR

  parser = PyToIR()
  ir = parser.parse("[x**2 for x in range(10) if x % 2 == 0]")

  # Generate code for any backend
  rust_code = render("rust", ir, parallel=True)
  ts_code = render("ts", ir, parallel=True)
  ```

  ## 🔗 Links

  - **Live Dashboard**: [Production](https://tunezilla-zz.github.io/polyglot-code-sampler/) | [Demo](https://tunezilla-zz.github.io/polyglot-code-sampler/?demo=1)
  - **Documentation**: [RENDERER_API.md](docs/RENDERER_API.md)
  - **Migration Guide**: [CHANGELOG.md](CHANGELOG.md)
  - **Performance Reports**: [VALIDATION_REPORT.md](VALIDATION_REPORT.md)

  ---

  **Full Changelog**: https://github.com/TUNEZILLA-zz/polyglot-code-sampler/compare/$PREVIOUS_TAG...v$RESOLVED_VERSION
